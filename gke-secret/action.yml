name: gke-secret
description: "Deploy Secret to GKE"

inputs:
  gcp_project_id:
    type: string
    required: true
  gke_location:
    type: string
    required: true
  gke_cluster:
    type: string
    required: true
  gke_namespace:
    description: "namespace of the serivce/pod to deploy"
    type: string
    required: true
    default: "default"
  app_name:
    type: string
    required: true
  env_file_base64:
    type: string
    required: true
  gke_sa_key:
    description: "GKE service account key"
    required: true
  environment:
    type: string
    default: "dev"
    description: "Environment"
    required: false
  FEISHU_CUSTOMERBOT_WEBHOOK:
    description: "Feishu customer bot webhook"
    type: string
    required: true
  FEISHU_CUSTOMERBOT_SECRET:
    description: "Feishu customer bot secret"
    type: string
    required: true

runs: 
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref }}
        
    - id: 'gcp-auth'
      name: Auth Google Cloud
      uses: google-github-actions/auth@v2
      with:
        project_id: ${{ inputs.gcp_project_id }}
        credentials_json: ${{ inputs.gke_sa_key }}
    
    - id: 'gke-get-credentials'
      name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ inputs.gke_cluster }}
        location: ${{ inputs.gke_location }}

    - id: 'validate-env-base64'
      name: "Validate env file base64"
      shell: bash
      run: |
        # Validate base64
        if echo ${{ inputs.env_file_base64 }} | base64 -d > /dev/null 2>&1; then
          echo "Base64 validation successful"
        else
          echo "Error: Invalid base64 content"
          exit 1
        fi

        # Save base64 content to GITHUB_OUTPUT
        echo "env_content=${base64_content}" >> $GITHUB_OUTPUT


    - id: 'update-k8s-secret'
      name: "Update k8s secret"
      uses: azure/k8s-create-secret@v4
      with:
        namespace: ${{ inputs.gke_namespace }}
        secret-type: generic
        secret-name: ${{ inputs.app_name }}-secret
        data: '{"${{ inputs.app_name }}.env": "${{ steps.export-env.outputs.env_content }}"}'
    
    - id: 'update-k8s-env-secret'
      name: "Update k8s env secret"
      shell: bash
      run: |
        # Create a temporary file with a unique name
        temp_env_file=$(mktemp)

        # Decode base64 content back to env file
        echo "${{ steps.export-env.outputs.env_content }}" | base64 -d > "$temp_env_file"

        # update the Kubernetes secret
        kubectl create secret generic ${{ inputs.app_name }}-env-secret \
          --from-env-file="$temp_env_file" \
          --namespace=${{ inputs.gke_namespace }} \
          --dry-run=client -o yaml | kubectl apply -f -

        # Clean up temporary file
        rm "$temp_env_file"

    - id: deploy-success-notification
      name: Deploy success notification
      uses: SerendipityOneInc/feishu-actions@main
      with:
        # The custom action has bugs, the with here is useless, just to supress vscode error
        FEISHU_CUSTOMERBOT_WEBHOOK: ${{ inputs.FEISHU_CUSTOMERBOT_WEBHOOK }}
        FEISHU_CUSTOMERBOT_SECRET: ${{ inputs.FEISHU_CUSTOMERBOT_SECRET }}
      env:
        # Following are used for feishu message
        FEISHU_CUSTOMERBOT_WEBHOOK: ${{ inputs.FEISHU_CUSTOMERBOT_WEBHOOK }}
        FEISHU_CUSTOMERBOT_SECRET: ${{ inputs.FEISHU_CUSTOMERBOT_SECRET }}
        MSGTYPE: interactive
        CONTENT: |
          ** üöÄ k8s secret ${{ inputs.app_name }}-env-secret deployed success! **
          - Github Event Inputs Ref: ${{ github.event.inputs.ref }}
          - GCP Project: ${{ inputs.gcp_project_id }}
          - GKE Cluster: ${{ inputs.gke_cluster }}
          - GKE Location: ${{ inputs.gke_location }}
          - GKE Namespace: ${{ inputs.gke_namespace }}
          - App Name: ${{ inputs.app_name }}
          - Trigger By: ${{ github.event_name	}}
          - Github Ref: ${{ github.ref }}

    - id: deploy-failure-notification
      name: Deploy failure notification
      uses: SerendipityOneInc/feishu-actions@main
      if: failure()
      with:
        # The custom action has bugs, the with here is useless, just to supress vscode error
        FEISHU_CUSTOMERBOT_WEBHOOK: ${{ inputs.FEISHU_CUSTOMERBOT_WEBHOOK }}
        FEISHU_CUSTOMERBOT_SECRET: ${{ inputs.FEISHU_CUSTOMERBOT_SECRET }}
      env:
        # Following are used for feishu message
        FEISHU_CUSTOMERBOT_WEBHOOK: ${{ inputs.FEISHU_CUSTOMERBOT_WEBHOOK }}
        FEISHU_CUSTOMERBOT_SECRET: ${{ inputs.FEISHU_CUSTOMERBOT_SECRET }}
        MSGTYPE: interactive
        CONTENT: |
          ** ‚ùå k8s secret ${{ inputs.app_name }}-env-secret deployed failed! **
          - Github Event Inputs Ref: ${{ github.event.inputs.ref }}
          - GCP Project: ${{ inputs.gcp_project_id }}
          - GKE Cluster: ${{ inputs.gke_cluster }}
          - GKE Location: ${{ inputs.gke_location }}
          - GKE Namespace: ${{ inputs.gke_namespace }}
          - App Name: ${{ inputs.app_name }}
          - Trigger By: ${{ github.event_name	}}
          - Github Ref: ${{ github.ref }}
